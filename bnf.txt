<programa> ::=  Proceso <nombre_proceso> <eol>
                    <tab> <instrucciones>
                FinProceso

<nombre_proceso> ::= <id_variable>

<instrucciones> ::= <instruccion> <instrucciones> | <instruccion> <eol> <instrucciones> | <eol>
<instruccion> ::= <si> | <mientras> | <expresion> | <declaracion> | <funcion> | <entrada_salida> ; 

<si> ::=    Si <open_paren> <expresion> <close_paren> <eol> 
                [ <tab> <instrucciones> <eol> ] 
                [ <entonces> ] 
            FinSi

<entonces> ::=  Entonces <eol> 
                    [ <tab> <instrucciones> <eol>]

<mientras> ::=  Mientras <open_paren> <expresion> <close_paren> <eol> 
                    [ <tab> <instrucciones> <eol> ]
                FinMientras

<declaracion> ::= <tipo_variable> <id_variable> [multiples_id]
<multiples_id> ::= , <id_variable> <multiples_id> | <eol>

<funcion> ::=   SubProceso [ <variable_retorno> <- ] <nombre_subproceso> [ <argumentos> ] <eol>
                    [ <tab> <instrucciones> <eol> ]
                FinSubproceso

<variable_retorno> ::= <id_variable>
<argumentos> ::= <argumento> <argumentos_tail> | <eol>
<argumentos_tail> ::= , <argumento> <argumentos_tail> | <eol>
<argumento> ::= <tipo_variable> <id_variable>

<entrada_salida> ::= Leer <open_paren> <id_variable> <close_paren> | Escribir <open_paren> <id_variable> <close_paren>

<expresion> ::= <expresion> + <expresion> 
                | <expresion> - <expresion> 
                | <expresion> * <expresion> 
                | <expresion> / <expresion> 
                | <expresion> < <expresion> 
                | <expresion> <= <expresion> 
                | <expresion> > <expresion> 
                | <expresion> >= <expresion> 
                | <expresion> != <expresion> 
                | <expresion> == <expresion> 
                | <expresion> && <expresion> 
                | <expresion> || <expresion> 
                | <open_paren> <expresion> <close_paren> 
                | <id_variable> 
                | <digito>

<id_variable> ::= <simbolo_primitivo> <id_variable_tail>
<id_variable_tail> ::= <digito> <id_variable_tail> | Îµ

<tipo_variable> ::= Logico | Entero | Real | Caracter | Cadena

<simbolo_primitivo> ::= a | b | .. | z | A | B | .. | Z | _
<digito> ::= 0 | 1 | .. | 9

<eol> ::= '\n'
<tab> ::= '\t'
<open_paren> ::= (
<close_paren> ::= )